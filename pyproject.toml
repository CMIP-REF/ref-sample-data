[project]
name = "ref-sample-data"
version = "0.4.1"
description = "CMIP Rapid Evaluation Framework Sample Data"
readme = "README.md"
authors = [
  { name= "Jared Lewis", email="jared.lewis@climate-resource.com" }
]
requires-python = ">=3.10"

[project.license]
text = "Apache-2.0"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64", "win-64"]

[tool.pixi.dependencies]
python = ">=3.10"
pooch = "*"
intake-esgf = "*"
matplotlib = ">=3.10.0"
scipy = ">=1.15.0"
xarray = ">=2024.10.0"
typer = ">=0.15.1"
xcdat = ">=0.8.0,<0.9"
xesmf = ">=0.8.7,<0.9"

[tool.pixi.pypi-dependencies]
# Add any dependencies that aren't available on conda-forge here
ref_sample_data = { path = ".", editable = true }

[tool.pixi.feature.dev.dependencies]
ruff = "*"
pre-commit = ">=3.3.1"
towncrier = ">=24.8.0"
pip = ">=24.3.1"
bump-my-version = ">=0.29.0"
pixi-pycharm = ">=0.0.8,<0.0.9"

[tool.pixi.feature.dev.pypi-dependencies]
liccheck = ">=0.9.2"

[tool.pixi.environments]
default = ["dev"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
fail_under = 95
skip_empty = true
show_missing = true
# Regexes for lines to exclude from consideration in addition to the defaults
exclude_also = [
    # Don't complain about missing type checking code:
    "if TYPE_CHECKING",
    # Exclude ... literals
    "\\.\\.\\."
]

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
filterwarnings = [
]

# We currently check for GPL licensed code, but this restriction may be removed
[tool.liccheck]
authorized_licenses = [
    "bsd",
    "bsd license",
    "BSD 3-Clause",
    "CC0",
    "apache",
    "apache 2.0",
    "apache-2.0",
    "apache software",
    "apache software license",
    "Apache License, Version 2.0",
    "CMU License (MIT-CMU)",
    "isc license",
    "isc license (iscl)",
    "GNU Library or Lesser General Public License (LGPL)",
    "gnu lgpl",
    "lgpl with exceptions or zpl",
    "LGPLv2+",
    "GNU Lesser General Public License v2 (LGPLv2)",
    "GNU Lesser General Public License v2 or later (LGPLv2+)",
    "mit",
    "mit license",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "python software foundation",
    "python software foundation license",
    "zpl 2.1",
]
# This starting list is relatively conservative. Depending on the project, it
# may make sense to move some of these into the authorized list
unauthorized_licenses = [
    "agpl",
    "gnu agpl",
    "gpl v3",
    "gplv3",
    "gpl v2",
    "gplv2",
    "gpl v1",
    "gplv1",
]
dependencies = true
